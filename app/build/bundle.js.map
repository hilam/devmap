{"version":3,"sources":["webpack:///./client/maps/index.js","webpack:///./client/maps/properties.js","webpack:///./client/index.js","webpack:///./client/actions/mapaction.js","webpack:///./client/actions/nodes.js","webpack:///./client/components/edit.js","webpack:///./client/components/editnode.js","webpack:///./client/components/grid.js","webpack:///./client/components/index.js","webpack:///./client/components/map.js","webpack:///./client/components/mapdetail.js","webpack:///./client/devtool.js","webpack:///./client/maps/node.js","webpack:///./client/reducers/index.js","webpack:///./client/reducers/maps.js","webpack:///./client/reducers/node.js","webpack:///./client/routes.js","webpack:///./client/sagas/index.js","webpack:///./client/sagas/mapsaga.js","webpack:///./client/serviceloader.js","webpack:///./client/store.js","webpack:///./client/utils/canvas.js","webpack:///./client/utils/index.js","webpack:///./client/actions/index.js","webpack:///./client/components/addnode.js","webpack:///./client/sagas/nodesaga.js","webpack:///./client/sagas/notificationSaga.js","webpack:///./client/components/dialog.js","webpack:///./client/components/removenode.js"],"names":["parseObjectTree","parseTree","draw","transform","find","props","branch","isRoot","node","name","children","child","addChild","data","length","canvas","ctx","getContext","tree","console","log","context","width","height","drawImage","result","key","pair","childs","child_key","new_pair","push","id","index","value","module","exports","textFilter","label","type","val","fontSize","model","min","max","connectorWidth","connectorSteepness","step","connectorLineWidth","nodeMarginTop","nodeMarginBottom","useGrayscale","document","getElementById","update","editTreeNode","createTreeNode","removeTreeNode","parent","payload","actionCreators","canvasMaps","themes","getRandom","arr","Math","floor","random","EditMap","offset","offsetWidth","onEdit","onAdd","onClose","editUrl","addUrl","removeUrl","theme","marginLeft","display","border","color","textTransform","background","map","description","defaultProps","Edit","params","maps","filter","x","margin","textAlign","marginTop","bind","onRemove","verb","getUrlFor","mapStateToProps","state","mapDispatchToProps","dispatch","canvasUtils","EditNode","transformed","tfm","setState","e","target","onOk","GridList","i","require","isProduction","App","Map","AddNode","RemoveNode","refs","can","treedata","MapDetail","viewName","editName","align","utils","fontFamily","labelPaddingBottom","labelPaddingRight","DEBUG","TreeNode","labelLines","split","undefined","currentBranchColor","that","dl","y","c","w","fillStyle","fillRect","dr","h","lineWidth","strokeStyle","rect","stroke","createElement","font","textHeight","composedHeight","paddedHeight","labelHeight","labelWidth","ceil","measureText","isLeaf","fillText","anchorPoint","branchColors","generateRandomColor","canvases","childrenVerticalPositions","childrenHeight","leftMargin","connector_a","connector_b","beginPath","moveTo","bezierCurveTo","lineTo","lineCap","roundRect","reducers","nodes","action","routes","rootSaga","createMapSaga","getMapDetails","getMaps","get","results","ServiceLoader","scriptname","script","onSuccess","onError","navigator","serviceWorker","register","then","reg","catch","err","waiting","installing","self","controller","emit","track","onTrack","addEventListener","window","location","reload","error","event","enhancers","sagaMiddleWare","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","getRandomInt","radius","fill","tl","tr","br","bl","defaultRadius","side","quadraticCurveTo","closePath","componentToHex","hex","toString","rgbToHex","r","g","b","baseColor","red","green","blue","mixture","round","editNodeForTree","addNodeForTree","removeNodeForTree","editNodeDetails","addNodeDetails","removeNodeDetails","editNode","put","message","goBack","addNode","post","removeNode","delete","watch","notification","text","ModelDialog","title","open","okName","cancelName","onCancel","propTypes","string","isRequired","bool","func"],"mappings":"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","file":"bundle.js","sourcesContent":["import * as props from './properties';\nimport TreeNode from './node';\n\nexport function parseObjectTree(branch, isRoot = false) {\n    var node = new TreeNode(branch.name, isRoot);\n    for (var child of branch.children) {\n        node.addChild(parseObjectTree(child, false));\n    }\n    return node;\n}\n\nexport function parseTree(data) {\n    if (data.children.length == 0) return;\n    return parseObjectTree(data, true);\n}\n\nexport function draw(canvas, data) {\n    var ctx = canvas.getContext('2d');\n    var tree = parseTree(data);\n    console.log(tree);\n    var context = tree.draw();\n    // resize the canvas to fit the drawing...\n    canvas.width = context.width + 25;\n    canvas.height = context.height + 25;\n    ctx.drawImage(context, 25, 25);\n}\n\nexport function transform(data) {\n    const result = {};\n    for (let key in data) {\n        const pair = data[key];\n        console.log(pair);\n        result[\"name\"] = pair[\"label\"];\n        result[\"id\"] = pair[\"id\"];\n        result[\"description\"] = pair[\"description\"];\n        result[\"children\"] = [];\n        const childs = data[key][\"children\"];\n        for (let child_key in childs) {\n            const new_pair = {};\n            new_pair[child_key] = childs[child_key];\n            result[\"children\"].push(transform(new_pair));\n        }\n    }\n    return result;\n}\n\nexport function find(data, id) {\n    if (data['id'] === id) {\n        return data;\n    } else {\n        for(let index in data.children){\n            let child = data.children[index];\n            let value = find(child, id);\n            if(value)\n               return value;\n        }\n    }\n    return;\n}\n\n\n// WEBPACK FOOTER //\n// ./client/maps/index.js","module.exports.textFilter = {label: 'Text Filter (regex)', type: 'text', val: \".\"};\nmodule.exports.fontSize = {label: \"Font size\", model: \"fontSize\",  min: 5, max: 50, val: 13};\nmodule.exports.connectorWidth = {label: 'Connector width', model: \"connectorWidth\", min: 20, max: 100, val: 65};\nmodule.exports.connectorSteepness = {label: 'Connector steepness', min: 0.1, max:1, step:0.01, val: 0.65};\nmodule.exports.connectorLineWidth = {label: 'Line width', min: 0.5, max: 10, step: 0.25, val: 4.5};\nmodule.exports.nodeMarginTop = {label:' Top margin', min: 0, max: 50, val: 5};\nmodule.exports.nodeMarginBottom = {label:' Bottom margin', min: 0, max: 50, val: 5};\nmodule.exports.useGrayscale = {label: 'Use grayscale', type: 'boolean', val: 0};\n\n\n// WEBPACK FOOTER //\n// ./client/maps/properties.js","import React from 'react';\nimport {\n    render\n}\nfrom 'react-dom';\nimport routes from './routes';\nimport {\n    Provider\n}\nfrom 'react-redux';\nimport store from './store';\nimport Sloader from './serviceloader';\n\n// if ('serviceWorker' in navigator) {\n//     const loader = new Sloader('./sw.js');\n//     loader.on('update', function(reg){\n//         console.log('updating');\n//         reg.postMessage({\n//             action: 'skip'\n//         });\n//     });\n//     loader.on('installed', () => {console.log(\"installed\")});\n// }\nrender((<Provider store={store}>{routes}</Provider>), document.getElementById(\"app\"));\n\n\n\n// WEBPACK FOOTER //\n// ./client/index.js","export function update(){\n    return {\n        type: 'FETCH_MAPS'\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./client/actions/mapaction.js","export function editTreeNode(id, parent, data) {\n    return {\n        type: 'EDIT_TREE_NODE',\n        payload: {\n            id,\n            parent,\n            data\n        }\n    }\n}\n\nexport function createTreeNode(id, parent, data){\n    return {\n        type: 'CREATE_TREE_NODE',\n        payload: {\n            id,\n            parent,\n            data\n        }\n    }\n}\n\nexport function removeTreeNode(id, parent){\n    return {\n        type: 'REMOVE_TREE_NODE',\n        payload: {\n            id,\n            parent\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./client/actions/nodes.js","import React, {Component, PropTypes} from 'react';\nimport {Card, CardTitle, CardActions, CardMenu, IconButton, CardText} from 'react-mdl';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actionCreators from '../actions';\nimport * as canvasMaps from '../maps';\nimport {browserHistory} from 'react-router';\n\n\nconst themes = [\"Indigo\", \"Teal\", \"Green\", \"Red\", \"Orange\"];\nconst getRandom = (arr) => arr[Math.floor(Math.random() * arr.length)];\n\nclass EditMap extends Component{\n    constructor(props){\n        super(props);\n    }\n    \n    render(){\n    console.log(this.props);\n    const {data, offset, offsetWidth, id, onEdit, onAdd, onClose} = this.props;\n    const editUrl = onEdit(id);\n    const addUrl = onAdd(id);\n    const removeUrl = onClose(id);\n    const theme = getRandom(themes);\n    console.log(data.children);\n    return (<Card shadow={0} style={{marginLeft: offset, display: \"inline-block\", width: offsetWidth, border: \"0.5px solid \"+ theme}}>\n               <CardTitle style={{color: \"white\", textTransform: \"uppercase\", background: theme}}> {data.name} </CardTitle>\n               {\n                   data.children.map((child) => <EditMap data={child} \n                                                         key={child.id}\n                                                         offset={offset + 5}\n                                                         offsetWidth={offsetWidth - 9}\n                                                         id={child.id}\n                                                         onAdd={onAdd}\n                                                         onEdit={onEdit}\n                                                         onClose={onClose}/>)\n               }\n               <CardText style={{color: \"black\"}}>{data.description}</CardText>\n               <CardMenu style={{color: 'white'}}>\n                    <IconButton name=\"edit\" onClick={() =>  browserHistory.push(editUrl)}/>\n                    <IconButton name=\"add\"  onClick={() =>  browserHistory.push(addUrl)}/>\n                    <IconButton name=\"close\" onClick={() => browserHistory.push(removeUrl)} />\n              </CardMenu>\n           </Card>)\n    }\n}\n\nEditMap.defaultProps = {\n    offset: 0,\n    offsetWidth: 500\n}\n\n\nclass Edit extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        const {params} = this.props;\n        const maps = this.props.maps.filter((x) => x.id == params.id);\n        const data = canvasMaps.transform(maps[0].map);\n        console.log(data);\n        console.log(\"rendering\");\n        return (<div style={{margin: \"auto\", textAlign: \"center\", width: \"50%\", marginTop: 10}}>\n                   <EditMap data={data} \n                            offset={0}\n                            id={data.id}\n                            onEdit={this.onEdit.bind(this)}\n                            onAdd={this.onAdd.bind(this)}\n                            onClose={this.onRemove.bind(this)}/>\n                </div>)\n    }\n\n    getUrlFor(id, verb){\n        return `/${this.props.params.id}/${verb}/${id}`\n    }\n\n    onEdit(id){\n        return this.getUrlFor(id, 'edit');\n    }\n\n    onRemove(id){\n        return this.getUrlFor(id, 'remove');\n    }\n\n    onAdd(id){\n        return this.getUrlFor(id, 'add');\n    }\n}\n\nlet mapStateToProps = (state) => ({\n   maps: state.maps\n});\n\nlet mapDispatchToProps = (dispatch) => bindActionCreators(actionCreators, dispatch) ;\n\nEdit = connect(mapStateToProps, mapDispatchToProps)(Edit);\n\nexport default Edit;\n\n\n// WEBPACK FOOTER //\n// ./client/components/edit.js","import React, {Component, PropTypes} from 'react';\nimport {connect} from 'react-redux';\nimport {Textfield, Button, Card, CardTitle, CardText, CardActions} from 'react-mdl';\nimport { bindActionCreators } from 'redux';\nimport * as actionCreators from '../actions';\nimport * as canvasUtils from '../maps';\n\nclass EditNode extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            description: ''\n        };\n    }\n\n    componentWillMount(){\n        const {id, node} = this.props.params;\n        console.log(\"Current Node ID\", node);\n        const data = this.props.maps\n                               .filter((x) => x.id == id);\n        const transformed = data[0].map;\n        const tfm = canvasUtils.transform(transformed);\n        console.log(tfm);\n        const {name, description} = canvasUtils.find(tfm, node);\n        this.setState({\n            name,\n            description\n        });\n    }\n\n    componentDidMount(){\n\n    }\n\n    render(){\n        const {name, description} = this.state;\n        return (<Card shadow={0} style={{margin: \"auto\", marginTop: 50}}>\n                <CardTitle> Edit Node </CardTitle>\n                <CardText>\n                <Textfield label=\"Name\"\n                           value={name}\n                           style={{marginLeft: 5}}\n                           required\n                           onChange={(e) => this.setState({name: e.target.value})}/>\n                <Textfield label=\"Description\"\n                           value={description}\n                           rows={3}\n                           style={{marginLeft: 5}}\n                           required\n                           onChange={(e) => this.setState({description: e.target.value})}/>\n                </CardText>\n                <CardActions>\n                <Button primary onClick={this.onOk.bind(this)}> Update </Button>\n                </CardActions>\n               </Card>)\n    }\n\n    onOk(){\n        const {id, node} = this.props.params;\n        this.props.editTreeNode(id, node, this.state);\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n   maps: state.maps\n});\n\nlet mapDispatchToProps = (dispatch) => bindActionCreators(actionCreators, dispatch) ;\n\nEditNode = connect(mapStateToProps, mapDispatchToProps)(EditNode);\n\nexport default EditNode;\n\n\n// WEBPACK FOOTER //\n// ./client/components/editnode.js","import React, {Component, PropTypes} from 'react';\nimport {Grid, Card, Cell, CardTitle, CardText, CardActions, Button} from 'react-mdl';\nimport MapDetail from './mapdetail';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actionCreators from '../actions';\n\n\nclass GridList extends Component{\n    constructor(props){\n        super(props);\n    }\n    \n    componentWillMount(){\n        this.props.update();\n    }\n\n    render(){\n        const {maps} = this.props;\n        console.log(maps);\n        return (<Grid>\n            <Cell col={12} align=\"middle\">\n                {maps.map((x, i) => <MapDetail {...x} key={i}/>)}\n            </Cell>\n            </Grid>);\n    }\n}\n\nlet mapStateToProps = (state) => ({\n   maps: state.maps\n});\n\nlet mapDispatchToProps = (dispatch) => bindActionCreators(actionCreators, dispatch) ;\n\nGridList = connect(mapStateToProps, mapDispatchToProps)(GridList);\n\nexport default GridList;\n\n\n// WEBPACK FOOTER //\n// ./client/components/grid.js","import React, {Component} from 'react';\nimport {Layout, Header, Navigation, Content} from 'react-mdl';\nimport GridList from './grid';\nimport Map from './map';\nimport Edit from './edit';\nimport DevTools from '../devtool';\nimport EditNode from './editnode';\nimport AddNode from './addnode';\nimport RemoveNode from './removenode';\nrequire('js-snackbar/dist/snackbar.css');\n\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\nclass App extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (<div style={{width: 100}}>\n            <Layout fixedHeader>\n                <Header title=\"DEVMAP\"/>\n                {this.props.children}\n            </Layout>\n        </div>);\n    }\n}\n\nexport {App};\nexport {GridList};\nexport {Map};\nexport {Edit};\nexport {EditNode};\nexport {AddNode};\nexport {RemoveNode};\n\n\n// WEBPACK FOOTER //\n// ./client/components/index.js","import React, {Component, PropTypes} from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actionCreators from '../actions';\nimport * as canvasMaps from '../maps';\n\nclass Map extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    componentDidMount(){\n       const canvas =  this.refs.can;\n       const {params} = this.props;\n       const maps = this.props.maps.filter((x) => x.id == params.id);\n       console.log(maps[0].map);\n       const treedata = canvasMaps.transform(maps[0].map);\n       canvasMaps.draw(canvas, treedata);\n    }\n\n    render(){\n        return (<canvas ref=\"can\" style={{ display: \"block\", margin: \"auto\" }}></canvas>);\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n   maps: state.maps\n});\n\nlet mapDispatchToProps = (dispatch) => bindActionCreators(actionCreators, dispatch) ;\n\nMap = connect(mapStateToProps, mapDispatchToProps)(Map);\n\nexport default Map;\n\n\n// WEBPACK FOOTER //\n// ./client/components/map.js","import React, {Component, PropTypes} from 'react';\nimport {Card, CardText, CardTitle, CardActions, Button} from 'react-mdl';\nimport { Link , browserHistory} from 'react-router';\n\nclass MapDetail extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        const {name, description, id} = this.props;\n        const viewName = \"/view/\"+id;\n        const editName = \"/edit/\"+id;\n        return (<Card  shadow={1} style={{margin: '5px auto'}}>\n          <CardTitle expand style={{color: 'blue', align: 'center'}}>{name}</CardTitle>\n          <CardText>\n              {description}\n         </CardText>\n          <CardActions border>\n            <Button primary ripple={true} onClick={() => browserHistory.push(viewName)}>View Map</Button>\n            <Button primary ripple={true} onClick={() => browserHistory.push(editName)}>Edit Map</Button>\n          </CardActions>\n        </Card>);\n    }\n}\n\nexport default MapDetail;\n\n\n// WEBPACK FOOTER //\n// ./client/components/mapdetail.js","import React from 'react';\nimport {createDevTools} from 'redux-devtools';\nimport LogMonitor from 'redux-devtools-log-monitor';\nimport DockMonitor from 'redux-devtools-dock-monitor';\nimport Dispatcher from 'redux-devtools-dispatch';\nimport SliderMonitor from 'redux-slider-monitor';\n/**\n * Create the DevTools component and export it.\n */\nexport default createDevTools(\n  <DockMonitor\n    toggleVisibilityKey='ctrl-h'\n    changePositionKey='ctrl-q'\n    changeMonitorKey=\"ctrl-m\"\n    defaultIsVisible={true}\n  >\n    <LogMonitor theme='tomorrow' />\n    <Dispatcher />\n    <SliderMonitor keyboardEnabled />\n  </DockMonitor>\n);\n\n\n// WEBPACK FOOTER //\n// ./client/devtool.js","import * as utils from '../utils';\nimport treeProperties from './properties';\n\nvar fontFamily = \"Open Sans\";\n\nvar labelPaddingBottom = 8;\nvar labelPaddingRight = 10;\n\nvar DEBUG = false;\n\nexport default class TreeNode {\n\n    constructor(label, isRoot = false) {\n        this.name = label;\n        this.labelLines = this.name.split(\"\\n\");\n        this.isRoot = isRoot;\n        this.parent = undefined;\n        this.children = [];\n    }\n\n    get isLeaf() {\n        return this.children.length == 0;\n    }\n\n    addChild(child) {\n        child.parent = this;\n        this.children.push(child);\n    }\n\n    addChildren(...children) {\n        for (var child of children) {\n            this.addChild(child);\n        }\n    }\n\n    draw(currentBranchColor) {\n        var that = this;\n\n        var dl = function (x, y, c = \"#00ff00\", w = 100) {\n            that.ctx.fillStyle = c;\n            that.ctx.fillRect(x, y, w, 1);\n        };\n\n        var dr = function (x, y, w, h, c = \"#00ff00\") {\n            that.ctx.lineWidth = 1;\n            that.ctx.strokeStyle = c;\n            that.ctx.rect(x, y, w, h);\n            that.ctx.stroke();\n        };\n\n        this.canvas = document.createElement(\"canvas\");\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        // The width of the label will be the width of the widest line\n        this.ctx.font = treeProperties.fontSize.val + \"px \" + fontFamily;\n\n        // The height of the lines of text (only)\n        this.textHeight = treeProperties.fontSize.val * (this.labelLines.length);\n\n        // The height of the text + the separation from the line + the line height + the label margin\n        this.composedHeight = this.textHeight + labelPaddingBottom + treeProperties.connectorLineWidth.val;\n\n        // The composed height plus the margin\n        this.paddedHeight = this.composedHeight + treeProperties.nodeMarginTop.val;\n\n        this.labelHeight =\n            treeProperties.nodeMarginTop.val + // top margin\n            treeProperties.fontSize.val * (this.labelLines.length + 1) + // text lines' height\n            treeProperties.nodeMarginBottom.val // bottom margin\n        ;\n\n        this.labelWidth = Math.ceil(Math.max(...this.labelLines.map(c => this.ctx.measureText(c).width)));\n\n        if (this.isLeaf) {\n            // Resize the canvas\n            this.canvas.width = this.labelWidth + labelPaddingRight * 2;\n            this.canvas.height = this.labelHeight;\n\n            // Set the font\n            this.ctx.font = treeProperties.fontSize.val + \"px \" + fontFamily;\n\n            // Draw the text lines\n            for (var i = 0; i < this.labelLines.length; i++) {\n                this.ctx.fillText(this.labelLines[i], 0, treeProperties.fontSize.val * (i + 1) + treeProperties.nodeMarginTop.val);\n            }\n\n            // The anchorPoint defines where the line should start\n            this.anchorPoint = {\n                x: 0,\n                y: (this.labelLines.length * treeProperties.fontSize.val) + labelPaddingBottom + treeProperties.nodeMarginTop.val\n            };\n        } else {\n            // If this is the root, we need to generate a random color for each branch\n            if (this.isRoot) {\n                var branchColors = this.children.map(c => utils.generateRandomColor(treeProperties.useGrayscale));\n                var canvases = this.children.map((c, i) => c.draw(branchColors[i]));\n            }\n\n            // Otherwise, use the received branchColor\n            else {\n                var canvases = this.children.map((c, i) => c.draw(currentBranchColor));\n            }\n\n            // Get the vertical positions for the children\n            var childrenVerticalPositions = [0];\n\n            // Each position is the sum of the acumulated heights of the previous elements\n            for (var i = 0; i < canvases.length; i++) {\n                childrenVerticalPositions[i + 1] = childrenVerticalPositions[i] + canvases[i].height;\n            }\n\n            let childrenHeight = childrenVerticalPositions[canvases.length];\n\n            this.anchorPoint = {\n                x: this.isRoot ? 10 : 0,\n                y: 0\n            };\n\n            /*\n             If the height of the children is smaller than the height of the node, take the height of the node and\n             don't center it vertically.\n             Otherwise, take the max between 2*height of the node and the children height, and center it vertically.\n             */\n\n            if (childrenHeight < this.composedHeight + treeProperties.nodeMarginTop.val * 2) {\n                this.canvas.height = this.composedHeight + treeProperties.nodeMarginTop.val * 2;\n                this.anchorPoint.y = this.canvas.height / 2 + this.composedHeight / 2;\n            } else {\n                this.canvas.height = Math.max(childrenVerticalPositions[canvases.length], this.composedHeight * 2);\n                this.anchorPoint.y = this.canvas.height / 2;\n            }\n\n            console.log(this.label, this.canvas.height, childrenVerticalPositions[canvases.length]);\n\n            // Compute left margin (label width + separation)\n            var leftMargin = 10 + this.labelWidth + treeProperties.connectorWidth.val;\n\n            // Set the width to the leftMargin plus the width of the widest child branch\n            this.canvas.width = leftMargin + Math.max(...canvases.map(c => c.width));\n            this.ctx.font = treeProperties.fontSize.val + \"px \" + fontFamily;\n\n\n            // Draw each child\n            for (var i = 0; i < canvases.length; i++) {\n                if (this.isRoot) {\n                    currentBranchColor = branchColors[i];\n                }\n\n                this.ctx.drawImage(canvases[i], leftMargin, childrenVerticalPositions[i]);\n\n                var connector_a = {\n                    x: this.anchorPoint.x + this.labelWidth + labelPaddingRight,\n                    y: this.anchorPoint.y\n                };\n\n                var connector_b = {\n                    x: leftMargin,\n                    y: childrenVerticalPositions[i] + this.children[i].anchorPoint.y\n                };\n\n                this.ctx.beginPath();\n                this.ctx.moveTo(connector_a.x, connector_a.y);\n\n                this.ctx.bezierCurveTo(\n                    connector_a.x + treeProperties.connectorSteepness.val * treeProperties.connectorWidth.val, connector_a.y,\n                    connector_b.x - treeProperties.connectorSteepness.val * treeProperties.connectorWidth.val, connector_b.y,\n                    connector_b.x, connector_b.y\n                );\n\n                this.ctx.lineTo(\n                    connector_b.x + this.children[i].labelWidth + labelPaddingRight,\n                    connector_b.y\n                );\n                this.ctx.lineWidth = treeProperties.connectorLineWidth.val;\n                this.ctx.lineCap = \"round\";\n                this.ctx.strokeStyle = currentBranchColor;\n                this.ctx.stroke();\n            }\n\n\n            // For the root node, print a containing rectangle and always center the text\n            if (this.isRoot) {\n                this.ctx.fillStyle = \"#ffffff\";\n                this.ctx.lineWidth = 3;\n                utils.roundRect(this.ctx,\n                    2, this.canvas.height / 2 - (this.labelLines.length) * treeProperties.fontSize.val,\n                    this.labelWidth + 18, treeProperties.fontSize.val * (this.labelLines.length + 1.5),\n                    5, true, true);\n\n                this.ctx.fillStyle = \"#000000\";\n\n                for (var i = 0; i < this.labelLines.length; i++) {\n                    this.ctx.fillText(\n                        this.labelLines[i],\n                        10, // Fixed margin from the left\n                        this.canvas.height / 2 // Vertical center\n                        +\n                        treeProperties.fontSize.val / 2 // Middle of the line height\n                        -\n                        treeProperties.fontSize.val * (this.labelLines.length - i - 1) // Correctly account for multilines\n                    );\n                }\n            } else {\n                this.ctx.fillStyle = \"#000000\";\n\n                for (var i = 0; i < this.labelLines.length; i++) {\n                    this.ctx.fillText(\n                        this.labelLines[i],\n                        10, // Fixed margin from the left\n                        this.anchorPoint.y // From the anchor point\n                        -\n                        labelPaddingBottom // Move up the padding\n                        -\n                        treeProperties.fontSize.val * (this.labelLines.length - i - 1)\n                    );\n                }\n            }\n        }\n\n        if (DEBUG) {\n            dr(1, 1, this.canvas.width - 1, this.canvas.height - 1);\n        }\n\n\n        return this.canvas;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./client/maps/node.js","import { combineReducers } from \"redux\";\nimport maps from './maps';\nimport nodes from './node';\nexport const reducers = combineReducers({maps, nodes});\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/index.js","export default function maps(state=[], action){\n    switch(action.type){\n        case 'UPDATE_MAPS':\n            return [...action.maps];\n        default:\n            return state;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/maps.js","export default function nodes(state={}, action) {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./client/reducers/node.js","import {Router, Route, IndexRoute, Link, browserHistory} from 'react-router';\nimport {App, GridList, Map, Edit, EditNode, AddNode, RemoveNode} from './components';\n\nconst routes = (\n  <Router history={browserHistory}>\n      <Route path=\"/\" component={App}>\n         <IndexRoute component = {GridList} />\n         <Route path = \"/view/:id\" component = {Map} />\n         <Route path = \"/edit/:id\" component = {Edit} />\n         <Route path = \"/:id/edit/:node\" component = {EditNode} />\n         <Route path = \"/:id/add/:node\" component={AddNode} />\n         <Route path = \"/:id/remove/:node\" component={RemoveNode} />\n      </Route>\n  </Router>\n)\n\nexport default routes;\n\n\n// WEBPACK FOOTER //\n// ./client/routes.js","import {\n  createMapSaga\n} from './mapsaga';\nimport {editNodeForTree,addNodeForTree, removeNodeForTree} from './nodesaga';\nimport NotifySaga from './notificationSaga';\n\nexport default function* rootSaga() {\n  yield [\n    createMapSaga(),\n    editNodeForTree(),\n    addNodeForTree(),\n    removeNodeForTree(),\n    NotifySaga()\n  ];\n}\n\n\n// WEBPACK FOOTER //\n// ./client/sagas/index.js","import axios from 'axios';\nimport {\n    put,\n    call,\n    takeEvery\n} from 'redux-saga/effects';\n\nfunction getMaps() {\n    return axios.get(\"/api/list\");\n}\n\nfunction* getMapDetails() {\n    const results = yield call(getMaps);\n    // console.log(results.data);\n    yield put({\n        type: 'UPDATE_MAPS',\n        maps: results.data\n    });\n}\n\nexport function* createMapSaga() {\n    yield takeEvery('FETCH_MAPS', getMapDetails);\n}\n\n\n// WEBPACK FOOTER //\n// ./client/sagas/mapsaga.js","import EventEmitter from 'events';\n\nclass ServiceLoader extends EventEmitter {\n    constructor(scriptname) {\n        super();\n        this.script = scriptname;\n        const onSuccess = this.onSuccess.bind(this);\n        const onError = this.onError.bind(this);\n        navigator.serviceWorker.register(scriptname)\n            .then((reg) => onSuccess(reg))\n            .catch((err) => onError(err));\n    } \n\n    onSuccess(reg) {\n        console.log(reg.waiting);\n        console.log(reg.installing);\n        let self = this;\n        console.log(\"registed\");\n        if (!navigator.serviceWorker.controller)\n            return;\n\n        if (reg.waiting) {\n            self.emit('update', reg.waiting);\n            return;\n        }\n        if (reg.installing){\n            let track = this.onTrack.bind(this,  reg.installing);\n            track();\n            return;\n        }\n\n        reg.addEventListener('updatefound', function(){\n            console.log(\"update found\");\n            self.onTrack(reg.installing);\n        });\n\n        reg.addEventListener('controllerchange', function(){\n            window.location.reload();\n        });\n    }\n\n    onError(err) {\n        console.error(err);\n    }\n\n    onTrack(event){\n        var self = this;\n        console.log(\"tracking\");\n        event.addEventListener('statechange', function(){\n            if (event.state == 'installed'){\n                self.emit('installed', event);\n            }\n         });\n    }\n\n}\n\nexport default ServiceLoader;\n\n\n// WEBPACK FOOTER //\n// ./client/serviceloader.js","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { reducers } from \"./reducers/index\";\nimport createLogger from \"redux-logger\";\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './sagas';\nlet enhancers;\nconst sagaMiddleWare = createSagaMiddleware();\nconst middleware = applyMiddleware(sagaMiddleWare);\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\nif(process.env.NODE_ENV == 'production'){\n  enhancers =  composeEnhancers(middleware);\n}\nelse{\n  enhancers =  composeEnhancers(middleware);\n}\nconst store = createStore(reducers, {}, enhancers);\nsagaMiddleWare.run(rootSaga);\nexport default store;\n\n\n// WEBPACK FOOTER //\n// ./client/store.js","export function roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke == 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = {tl: radius, tr: radius, br: radius, bl: radius};\n    } else {\n        var defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0};\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nexport function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\n\nfunction componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function generateRandomColor(useGrayscale) {\n\n    var baseColor = [256, 256, 256];\n    var red = getRandomInt(0, 256);\n    var green = getRandomInt(0, 256);\n    var blue = getRandomInt(0, 256);\n\n    // mix the color\n\n    var mixture = 0.7;\n\n    red = Math.round(red * mixture + baseColor[0] * (1 - mixture));\n    green = Math.round(green * mixture + baseColor[1] * (1 - mixture));\n    blue = Math.round(blue * mixture + baseColor[2] * (1 - mixture));\n\n    if (useGrayscale.val == 1) {\n        return rgbToHex(red, red, red);\n    }\n    else {\n        return rgbToHex(red, green, blue);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/utils/canvas.js","export * from './canvas';\n\n\n// WEBPACK FOOTER //\n// ./client/utils/index.js","export * from './mapaction';\nexport * from './nodes';\n\n\n// WEBPACK FOOTER //\n// ./client/actions/index.js","import React, {Component, PropTypes} from 'react';\nimport {connect} from 'react-redux';\nimport {Textfield, Button, Card, CardTitle, CardText, CardActions} from 'react-mdl';\nimport { bindActionCreators } from 'redux';\nimport * as actionCreators from '../actions';\nimport * as canvasUtils from '../maps';\n\nclass AddNode extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            description: ''\n        };\n    }\n\n    render(){\n        const {name, description} = this.state;\n        return (<Card shadow={0} style={{margin: \"auto\", marginTop: 50}}>\n                <CardTitle> Add New Node </CardTitle>\n                <CardText>\n                <Textfield label=\"Name\"\n                           value={name}\n                           style={{marginLeft: 5}}\n                           required\n                           onChange={(e) => this.setState({name: e.target.value})}/>\n                <Textfield label=\"Description\"\n                           value={description}\n                           rows={3}\n                           style={{marginLeft: 5}}\n                           required\n                           onChange={(e) => this.setState({description: e.target.value})}/>\n                </CardText>\n                <CardActions>\n                <Button primary onClick={this.onOk.bind(this)}> Create </Button>\n                </CardActions>\n               </Card>)\n    }\n\n    onOk(){\n        const {id, node} = this.props.params;\n        this.props.createTreeNode(id, node, this.state);\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n   maps: state.maps\n});\n\nlet mapDispatchToProps = (dispatch) => bindActionCreators(actionCreators, dispatch) ;\n\nAddNode = connect(mapStateToProps, mapDispatchToProps)(AddNode);\n\nexport default AddNode;\n\n\n// WEBPACK FOOTER //\n// ./client/components/addnode.js","import axios from 'axios';\nimport {\n    put,\n    call,\n    takeEvery\n} from 'redux-saga/effects';\nimport {\n    browserHistory\n} from 'react-router';\n\nfunction editNode(id, parent, data) {\n    return axios.put(`/api/${id}/edit/${parent}`, data);\n}\n\nfunction* editNodeDetails(action) {\n    const {\n        id,\n        parent,\n        data\n    } = action.payload;\n    try {\n        const result = yield call(editNode, id, parent, data);\n        console.log(result);\n        yield put({\n            type: 'FETCH_MAPS'\n        });\n        yield put({\n            type: \"NOTIFY\",\n            message: \"Node updated done successfully\"\n        });\n        browserHistory.goBack();\n    } catch (e) {\n        yield put({\n            type: \"NOTIFY\",\n            message: \"Error while updating node info\"\n        });\n    }\n}\n\nfunction addNode(id, parent, data) {\n    return axios.post(`/api/${id}/add/${parent}`, data);\n}\n\nfunction removeNode(id, parent){\n    return axios.delete(`/api/${id}/delete/${parent}`);\n}\n\nfunction* addNodeDetails(action) {\n    const {\n        id,\n        parent,\n        data\n    } = action.payload;\n    try {\n        const result = yield call(addNode, id, parent, data);\n        console.log(result);\n        yield put({\n            type: 'FETCH_MAPS'\n        });\n        yield put({\n            type: \"NOTIFY\",\n            message: \"Node updated done successfully\"\n        });\n        browserHistory.goBack();\n    } catch (e) {\n        yield put({\n            type: \"NOTIFY\",\n            message: \"Error while updating node info\"\n        });\n    }\n}\n\nfunction* removeNodeDetails(action) {\n    const {\n        id,\n        parent\n    } = action.payload;\n    try {\n        const result = yield call(removeNode, id, parent);\n        yield put({\n            type: 'FETCH_MAPS'\n        });\n        yield put({\n            type: \"NOTIFY\",\n            message: \"Node updated done successfully\"\n        });\n        browserHistory.goBack();\n\n    } catch (e) {\n        yield put({\n            type: \"NOTIFY\",\n            message: \"Error while updating node info\"\n        });\n    }\n}\n\n\n\nexport function* editNodeForTree() {\n    yield takeEvery('EDIT_TREE_NODE', editNodeDetails);\n}\n\nexport function* addNodeForTree() {\n    yield takeEvery('CREATE_TREE_NODE', addNodeDetails);\n}\n\nexport function* removeNodeForTree(){\n    yield takeEvery('REMOVE_TREE_NODE', removeNodeDetails);\n}\n\n\n// WEBPACK FOOTER //\n// ./client/sagas/nodesaga.js","import {\n    put,\n    call,\n    takeEvery\n} from 'redux-saga/effects';\nimport {show, ACTION_TYPE} from 'js-snackbar';\n\n\nfunction *notification(action){\n   const {message} = action;\n   show({text: message});\n}\n\n\nexport default function* watch(){\n    yield takeEvery(\"NOTIFY\", notification);\n}\n\n\n// WEBPACK FOOTER //\n// ./client/sagas/notificationSaga.js","import React, {Component, PropTypes} from 'react';\nimport {Dialog, DialogTitle, DialogContent, DialogActions, Button} from 'react-mdl';\n\nexport default class ModelDialog extends Component{\n    \n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        const {\n            title,\n            children,\n            open,\n            okName,\n            cancelName,\n            onOk,\n            onCancel,\n            data\n        } = this.props;\n\n        return (<div>\n            <Dialog open={open}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>{children}</DialogContent>\n                <DialogActions>\n                    <Button type='button' onClick={onOk}>{okName}</Button>\n                    <Button type='button' onClick={onCancel}>{cancelName}</Button>\n                </DialogActions>\n            </Dialog>\n        </div>)\n    }\n}\n\n\nModelDialog.propTypes = {\n    title: PropTypes.string.isRequired,\n    open: PropTypes.bool.isRequired,\n    okName: PropTypes.string.isRequired,\n    cancelName: PropTypes.string.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n}\n\nModelDialog.defaultProps = {\n    open: false,\n    data: {}\n}\n\n\n// WEBPACK FOOTER //\n// ./client/components/dialog.js","import React, {Component, PropTypes} from 'react';\nimport {connect} from 'react-redux';\nimport {Textfield, Button, Card, CardTitle, CardText, CardActions} from 'react-mdl';\nimport { bindActionCreators } from 'redux';\nimport * as actionCreators from '../actions';\nimport * as canvasUtils from '../maps';\nimport ModelDialog from './dialog';\nimport {browserHistory} from 'react-router';\n\nclass RemoveNode extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    onCancel(){\n        browserHistory.goBack();\n    }\n\n    onOk(){\n        const {id, node} = this.props.params;\n        this.props.removeTreeNode(id, node);\n    }\n\n    render(){\n      return (<ModelDialog open={true}\n                           title=\"Confirmation\"\n                           okName=\"Delete It!\"\n                           cancelName=\"Retreat!\"\n                           onOk={this.onOk.bind(this)}\n                           onCancel={this.onCancel.bind(this)}>\n               <p> Are you sure with the action to delete the node ? </p>\n              </ModelDialog>)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => bindActionCreators(actionCreators, dispatch) ;\n\nRemoveNode = connect(null, mapDispatchToProps)(RemoveNode);\n\nexport default RemoveNode;\n\n\n// WEBPACK FOOTER //\n// ./client/components/removenode.js"],"sourceRoot":""}